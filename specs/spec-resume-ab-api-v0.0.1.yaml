openapi: 3.0.3
info:
  title: ok-resume
  description: 'This is a sample server resume server. [Repo here](https://github.com/otuskotlin/ok-202105-resume-ab) '
  license:
    name: MIT open source license
    url: https://github.com/otuskotlin/ok-202105-resume-ab
  version: 0.0.1
servers:
  - url: https://localhost/
tags:
  - name: resume
    description: Резюме (CRUD)
paths:
  /resume/init:
    post:
      tags:
        - resume
      summary: Получить статус при инициализации
      operationId: initResume
      requestBody:
        description: Объект запроса для инициализации при старте приложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitResumeRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitResumeResponse'
  /resume/create:
    post:
      tags:
        - resume
      summary: Создать новое резюме
      operationId: createResume
      requestBody:
        description: Объект запроса для создания нового резюме
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResumeRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResumeResponse'
  /resume/read:
    post:
      tags:
        - resume
      summary: Получить информацию о резюме
      operationId: readResume
      requestBody:
        description:  Объект запроса для получения информации о резюме
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadResumeRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadResumeResponse'
  /resume/update:
    post:
      tags:
        - resume
      summary: Обновить резюме
      operationId: updateResume
      requestBody:
        description: Объект запроса для обновления резюме
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResumeRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResumeResponse'
  /resume/delete:
    post:
      tags:
        - resume
      summary: Удалить резюме
      operationId: deleteResume
      requestBody:
        description: Объект запроса для удаления резюме
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResumeRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResumeResponse'
#  /resume/{resumeId}/resumeExp/create:
#    post:
#      tags:
#        - resume
#        - resumeExp
#      summary: Создать новый объект характеризующий опыт
#      operationId: createResumeExp
#      requestBody:
#        description: Объект запроса для создания нового опыта с привязкой к резюме
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/CreateResumeExpRequest'
#        required: true
#      responses:
#        200:
#          description: All responses
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/CreateResumeExpResponse'
#  /resume/{resumeId}/resumeExp/read:
#    post:
#      tags:
#        - resume
#        - resumeExp
#      summary: Получить информацию об объектe характеризующий опыт
#      operationId: readResumeExp
#      requestBody:
#        description: Объект запроса для чтения опыта с привязкой к резюме
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/ReadResumeExpRequest'
#        required: true
#      responses:
#        200:
#          description: All responses
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ReadResumeExpResponse'
#  /resume/{resumeId}/resumeExp/update:
#    post:
#      tags:
#        - resume
#        - resumeExp
#      summary: Обновить информацию об объектe характеризующий опыт
#      operationId: updateResumeExp
#      requestBody:
#        description: Объект запроса для обновления опыта с привязкой к резюме
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UpdateResumeExpRequest'
#        required: true
#      responses:
#        200:
#          description: All responses
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/UpdateResumeExpResponse'
#  /resume/{resumeId}/resumeExp/delete:
#    post:
#      tags:
#        - resume
#        - resumeExp
#      summary: Удалить информацию об объектe характеризующий опыт
#      operationId: deleteResumeExp
#      requestBody:
#        description: Объект запроса для удаления опыта с привязкой к резюме
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/DeleteResumeExpRequest'
#        required: true
#      responses:
#        200:
#          description: All responses
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/DeleteResumeExpResponse'
components:
  schemas:

    BaseMessage:
      type: object
      description: Базовый класс для запросов и для ответов
      properties:
        messageType:
          type: string
          title: Дискриминатор
          description: Дискриминатор, содержащий тип класса сообщения и использующийся для десериализации
      discriminator:
        propertyName: messageType

    BaseRequest:
      description: Базовый класс для всех запросов
      allOf:
        - type: object
          properties:
            requestId:
              type: string

    BaseResponse:
      description: Базовый класс для всех ответов
      allOf:
        - type: object
          properties:
            requestId:
              type: string
            result:
              type: string
              enum:
                - success
                - error
            errors:
              type: array
              items:
                $ref: '#/components/schemas/RequestError'

    RequestError:
      type: object
      description: Описание ошибки обработки запроса
      properties:
        message:
          type: string
        field:
          type: string

    ResumeGender:
      type: string
      description: Пол. Элемент справочника gender.
      enum:
        - male
        - female
    #todo: отдельный CRUD для списка контактов
    ResumeContacts:
      type: array
      description: Список контактов соискателя.
      items:
        $ref: '#/components/schemas/ResumeContact'
    #todo: отдельный CRUD для опыта
    ResumeExperiences:
      type: array
      description: перечисление опыта
      items:
        $ref: '#/components/schemas/ResumeExperience'
    #todo: отдельный CRUD для опыта
    ResumeExperience:
      type: object
      description: Объект типа опыт описывающий опыт в одной компании/проекте.
      properties:
        experience_type:
          type: string
          description:
          enum:
            - WORK
            - PROJECT
            - EDUCATION
        name:
          type: string
          description: Название проекта
        url:
          type: string
          description: Ссылка на проект/работодателя/учебное заведение
        position:
          type: string
          description: должность
        start:
          type: string
          description: Начало работы (дата в формате ГГГГ-ММ-ДД).
        end:
          type: string
          description: Окончание работы (дата в формате ГГГГ-ММ-ДД).
        description:
          type: string
          description: Обязанности, функции, достижения.
    #todo: отдельный CRUD для навыков
    ResumeSkills:
      type: array
      description: перечисление задач.достижений по каждому навыку
      items:
        $ref: '#/components/schemas/ResumeSkill'
    #todo: отдельный CRUD для навыков
    ResumeSkill:
      type: object
      description: перечисление задач.достижений по каждому навыку
      properties:
        id:
          type: string
          description: Тип компетенции. Элемент справочника skill_duties_type.
          enum:
            - java
            - kotlin
            - sql
            - javaScript
            - html
            - css
            - kafa
            - activeMQ
        description:
          type: string
          description: Описание достижений, задач, опыта с данной компетенцией.
    #todo: отдельный CRUD для контактов
    ResumeContact:
      type: object
      description: Структура с данными о контакте
      properties:
        id:
          type: string
          description: Тип контакта. Элемент справочника preferred_contact_type.
          enum:
            - phone
            - eMail
            - telegram
            - linkedin
            - git
        value:
          type: string
          description: Значение контакта. Для телефона  – объект, для email — строка.
        preferred:
          type: boolean
          description: Является ли данный способ связи предпочитаемым.

    ResumeVisibility:
      type: string
      description: 'Тип видимости резюме. Возможные значения: видит только владелец, только зарегистрированный в системе пользователь, видимо всем'
      enum:
        - ownerOnly
        - registeredOnly
        - public

    CreatableResume:
      type: object
      description: Структура с данными о резюме для запроса о созадии
      properties:
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        age:
          type: string
          description:  Возраст
        ownerId:
          type: string
          title: Идентификатор владельца резюме
          description: Идентификатор пользователя, который создал и управляет резюме
        birthDate:
          type: string
          description: День рождения (в формате ГГГГ-ММ-ДД).
        gender:
          description: Пол. Элемент справочника gender.
          enum:
            - male
            - female
        visibility:
          $ref: '#/components/schemas/ResumeVisibility'

    UpdatableResume:
      description: Структура для данных о резюме в запросе на обновление
      allOf:
        - $ref: '#/components/schemas/CreatableResume'
        - type: object
          properties:
            id:
              type: string
              description: Идентификатор резюме

    ResponseResume:
      description: Структура, описывающая резюме в ответе
      allOf:
        - $ref: '#/components/schemas/UpdatableResume'
        - type: object
          properties:
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ResumePermissions'

    ResumePermissions:
      type: string
      description: Доступы к операциям над резюме
      enum:
        - read
        - update

    BaseDebugRequest:
      type: object
      description: Структура с описанием отладочных параметров запроса
      properties:
        mode:
          type: string
          default: prod
          enum:
            - prod
            - test
            - stub
        stubCase:
          type: string
          enum:
            - success
            - database_error

    InitResumeRequest:
      description: Структура для запроса начального состояния при старте вэб-клиента
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'

    InitResumeResponse:
      description: Структура для ответа с начальным состоянием при старте вэб-клиента
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object


    CreateResumeRequest:
      description: Структура для запроса создания нового резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createResume:
              $ref: '#/components/schemas/CreatableResume'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - databaseError

    CreateResumeResponse:
      description: Структура для ответа на запрос о создании резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            createdResume:
              $ref: '#/components/schemas/ResponseResume'



    ReadResumeRequest:
      description: Структура для получения резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            readResumeId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - databaseError

    ReadResumeResponse:
      description: Структура для ответа на запрос с информацией о резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            readResume:
              $ref: '#/components/schemas/ResponseResume'

    UpdateResumeRequest:
      description: Структура для запроса обновления существующего резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createResume:
              $ref: '#/components/schemas/UpdatableResume'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - databaseError

    UpdateResumeResponse:
      description: Структура для ответа на запрос с информацией о резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            updatedResume:
              $ref: '#/components/schemas/ResponseResume'

    DeleteResumeRequest:
      description: Структура для запроса удаления резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            deleteResumeId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - databaseError

    DeleteResumeResponse:
      description: Структура для ответа на запрос об удалении резюме
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            deletedResume:
              $ref: '#/components/schemas/ResponseResume'

